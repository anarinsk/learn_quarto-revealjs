---
title: "This Is a Testflight"
subtitle: "Completely useless presentation"
author: "[anarinsk](https://github.com/anarinsk/learn_quarto-revealjs/)"
date: "2022-09-06"
format: 
    revealjs:
        incremental: true   
        theme: black
        css: "index.scss"
        transition: concave
        background-transition: fade
        smaller: false
        scrollable: true
        logo: "logo2.png"
        footer: "I'm an Anti-굥"
        favicon: "favicon.ico"
        #self-contained: true
---

# Disclaimer 

This is a testflight. In this slide, I will test some (nice) features of reveal.js for my personal use. The features come mostly from [Quarto-Revealjs](https://quarto.org/docs/presentations/revealjs/).
<br>
<br>
이 PT는 장난질입니다. 내용은 무시하고 기능만 봐주세요. Quarto + reveal.js에서 개인적으로 필요한 요소들을 구현했습니다.  


# In the Morning 

## Getting up

- Turn off alarm
- Get out of bed
- (continued in the next slide... Hit proper key to continue)

---

- Go to the bathroom 
- Make breakfast 

## 해장술은 필요한가?

- 필요하다면 주종은? 
- 해장술에 어울리는 안주는?
- 국물이 필요한가?

. . . 

`p`의 텍스트가 `ul`, `ol`의 텍스트와 달라 보이나요? 

## Breakfast

- Eat eggs
- Drink coffee

# In the evening

## Dinner

- Eat spaghetti
- Drink wine

## Going to sleep

- Get in bed
- Count sheep

# How to add Footnote

## Footnote 

:::{ .nonincremental }
- Green ^[A footnote]
- Brown
- Purple
- 한글과 조화롭나요? 
:::

::: aside
Some additional commentary of more peripheral interest.
:::

# Testing Increamental 

## Incremental activated 

::: {.incremental}
- Eat spaghetti
- Drink wine
:::

## Inscremental deactivated

::: {.nonincremental}
- Eat spaghetti
- Drink wine
:::

# Testing Pause 

## Slide with a pause

content before the pause

. . .

content after the pause

# Multicolumn 

## Example 
::::: { .nonincremental }

:::: {.columns}

::: {.column width="40%"}
Left column

- This is left column.
- 40% is allocated. 
:::

::: {.column width="60%"}
Right column

- 이쪽은 오른쪽 열입니다. 
- 60%가 할당되어 있지요! 
:::

::::

:::::

# Cotents Overflow 

## Page w/o `{.smaller}`

- This is normal 
- 이게 보통 크기 

## Page w `{.smaller}` { .smaller }

- This is smaller 
- 이게 작은 크기 

## 스크롤이 가능한 슬라이드 {.scrollable}

:::{ .nonincremental}
- Bullet number 1
- Bullet number 2
- Bullet number 3
- Bullet number 4
- Bullet number 5
- Bullet number 6
- Bullet number 7 
- 총알 넘버 8 
- 총알 넘버 9
- 총알 넘버 10
- 총알 넘버 11
- 총알 넘버 12
:::

# How to apply fonts

## sample css { .smaller }

:::{ .nonincremental }
- `.qmd` 파일과 같은 위치에 `.css` 파일을 두고, 문서 앞의 YAML에서 해당 파일을 로드하면 된다. 
- 폰트를 로딩하고 적용하는 방법은 대체로 비슷하다. 이 문서에 적용된 `index.scss`를 보자. 
    - 1-3 번 라인이 폰트를 입력하는 명령이다. 
    - 나머지 아래는 css 양식, 즉 PT의 표시 항목 별로 폰트, 크기 및 특성을 지정한다. 
:::

```{.css code-line-numbers=2-4}
@import url("https://cdn.jsdelivr.net/gh/wan2land/d2coding/d2coding-ligature-subset.css");
@import url("https://cdn.jsdelivr.net/gh/sunn-us/SUIT/fonts/variable/woff2/SUIT-Variable.css");
@import url("https://cdn.jsdelivr.net/gh/sunn-us/SUITE/fonts/variable/woff2/SUITE-Variable.css");

/*-- scss:rules --*/
.reveal h1, 
.reveal h2, 
.reveal h3, 
.reveal h4, 
.reveal h5, 
.reveal h6 {
  font-family: 'SUITE Variable', sans-serif !important;
  /* text-shadow: -1px -1px 0 rgba(0, 0, 0, .3); */
  font-weight: 750;
}

.reveal section p {
    font-family: 'SUIT Variable', sans-serif !important;
    font-size: 90%;
}

.reveal section pre code {
  font-family: 'D2Coding', monospace !important;
  font-size: 90%;
}

.reveal ul, 
.reveal li, 
.reveal ol {
    font-family: 'SUIT Variable', sans-serif !important;
    font-size: 95%;
}

.reveal code{
  font-family: 'D2Coding', monospace !important;
  font-size: 95%;
}
```

# Tabsets 

## 탭셋을 적용해보자. 

::: {.panel-tabset}

### Tab A

Content for `Tab A` 

봉준호가 깐느봉일까요?

### Tab B

Content for `Tab B`

박찬욱이 깐느박일까요? 

:::

# $\rm\LaTeX$ 테스트 

## 수식 표현을 테스트합니다.
$$
\begin{aligned}
  \dot{x} & = \sigma(y-x) \\
  \dot{y} & = \rho x - y - xz \\
  \dot{z} & = -\beta z + xy
\end{aligned} 
$$


$$
   \begin{bmatrix}
                1 & x & 0 \\
                0 & 1 & -1
        \end{bmatrix}\begin{bmatrix}
                1  \\
                y  \\
                1
        \end{bmatrix}
        =\begin{bmatrix}
                1+xy  \\
                y-1
        \end{bmatrix}.
$$

인라인 수식은 잘 들어갑니꽈~ $y_i = \alpha + \beta x_i$는 회귀방정식이란 말이요~ 

## 수식 표현을 테스트합니다.{ .smaller }

::: {.nonincremental}
- `{.smaller}`을 슬라이드 타이틀에 적용한 경우  

$$
\begin{aligned}
  \dot{x} & = \sigma(y-x) \\
  \dot{y} & = \rho x - y - xz \\
  \dot{z} & = -\beta z + xy
\end{aligned} 
$$


$$
   \begin{bmatrix}
                1 & x & 0 \\
                0 & 1 & -1
        \end{bmatrix}\begin{bmatrix}
                1  \\
                y  \\
                1
        \end{bmatrix}
        =\begin{bmatrix}
                1+xy  \\
                y-1
        \end{bmatrix}.
$$

인라인 수식은 잘 들어갑니꽈~ $y_i = \alpha + \beta x_i$는 회귀방정식이란 말이요~ 
:::

# How to change background 

## Slide, aquamarine {background-color="aquamarine"}

This changes color of background! 

## 크기 지정 벽지 {background-color="black" background-image="https://www.comicbasics.com/wp-content/uploads/2020/01/Top-10-Marvel-Superheroes-That-Have-Doctorates-678x381.jpg" background-size="300px" background-repeat="repeat" background-opacity="0.5"}

This slide's background image will be sized to 100px and repeated.


## 꽉찬 벽지 {background-color="black" background-image="https://www.comicbasics.com/wp-content/uploads/2020/01/Top-10-Marvel-Superheroes-That-Have-Doctorates-678x381.jpg" background-size="cover" background-repeat="repeat" background-opacity="0.5"}

:::{style="color: yellow;"}
This slide's background image fits the screen.
:::

- Font color is changed locally. 

## {background-color="aquamarine"}

(A slide with no title)

## {background-color="black" background-image="https://placekitten.com/100/100" background-size="100px" background-repeat="repeat" background-opacity="0.5"}

(Another slide with no title)

# How to use code 

## Use env { .smaller }

:::{ .nonincremental }
- 코드를 실행하기 위해서는 '환경'을 쓰는 게 좋다. 
  - python의 env를 쓰든 conda env를 쓰든 필요한 것을 쓰자. 
- ~~VS Code Extension이 아직까지 conda 환경을 제대로 지원하지 않는다.~~
- 이제 잘 지원한다! 
  - `conda env`로 환경 진입 후 VS Code에서 동일하게 사용하면 된다. 
  - 이전 동작을 기억하는 듯 하다. 환경이 존재하면 그 환경으로 바로 잡아준다. 
- 이 슬라이드처럼 다크 테마를 쓸 경우 그림 표시에 문제가 있을 수 있다. 
  - 그림 표현 역시 다크 테마에 맞추거나 (`Testing Code I`)
  - 그림을 표현할 때는 적절한 밝은 테마를 쓰는 것이다. (`Testing Code II`) 
:::

## Testing Code I { .smaller }

```{.python  code-line-numbers="|7"}
#| echo: true
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt
plt.style.use('dark_background')
r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={"projection": "polar"})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

:::{ .nonincremental }
- `plt.style.use('dark_background')`: 다크 모드에 맞춘 스타일 설정 
- 한 턴 진행 후 아래 스크롤을 해서 결과를 확인! 
:::

. . . 

```{python}
#| echo: false
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt
plt.style.use('dark_background')
r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={"projection": "polar"})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

## Testing Code II { .smaller }

```{.python code-line-numbers="|7"}
#| echo: true
#| label: fig-polar-2
#| fig-cap: "A line plot on a polar axis wth customized style"

import numpy as np
import matplotlib.pyplot as plt
plt.style.use('seaborn-white')
#plt.rcParams["figure.figsize"] = (6,6)

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={"projection": "polar"})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
:::{ .nonincremental }
- `plt.style.use('seaborn-white')`: 적절한 백색 스타일  
:::

. . . 
```{python}
#| echo: false
#| output-location: slide
#| label: fig-polar-2
#| fig-cap: "A line plot on a polar axis wth customized style"

import numpy as np
import matplotlib.pyplot as plt

plt.style.use('seaborn-white')
#plt.rcParams["figure.figsize"] = (6,6)

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={"projection": "polar"})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

# End of Document